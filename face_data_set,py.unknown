import cv2
import os

# Ensure the 'dataset' directory exists
if not os.path.exists('dataset'):
    os.makedirs('dataset')

# Initialize the camera
cam = cv2.VideoCapture(0)
cam.set(3, 640)  # Set video width
cam.set(4, 480)  # Set video height

# Load the Haar Cascade for face detection (use correct path)
face_detector = cv2.CascadeClassifier('face/haarcascade_frontalface_default.xml')

# Ask for user ID
face_id = input('\nEnter user id and press <return> ==>  ')

print("\n [INFO] Initializing face capture. Look at the camera and wait ...")
count = 0

while(True):
    ret, img = cam.read()

    if not ret:
        print("Failed to grab frame")
        break

    # Flip the image immediately after capturing it
    img = cv2.flip(img, 1)  # Flip horizontally (mirror image)

    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_detector.detectMultiScale(gray, 1.3, 5)

    for (x, y, w, h) in faces:
        cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), 2)
        count += 1

        # Save the captured image to the dataset folder
        cv2.imwrite("dataset/User." + str(face_id) + '.' + str(count) + ".jpg", gray[y:y + h, x:x + w])

    # Display the flipped (mirrored) video feed
    cv2.imshow('image', img)

    # Exit loop if 'ESC' is pressed or take 50 samples
    k = cv2.waitKey(100) & 0xff
    if k == 27:  # Press 'ESC' to exit
        break
    elif count >= 300:  # Capture 50 samples
        break

# Cleanup
print("\n [INFO] Exiting Program and cleanup stuff")
cam.release()
cv2.destroyAllWindows()



